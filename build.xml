<project xmlns:ivy="antlib:org.apache.ivy.ant" name="MegaDrumManagerFX" default="main" basedir=".">
    <description>
        Create a Java Project (JAR) with Ant build script
    </description>

    <property name="projectName" value="MegaDrumManagerFX" />
    <property name="src.dir" location="src" />
    <property name="build.dir" location="build" />
    <property name="dist.dir" location="dist" />
    <property name="dist.lib.dir" location="dist/lib" />
    <property name="lib.dir" value="lib" />
    <property name="main-class" value="info.megadrum.managerfx.Main" />
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>

    <path id="MegaDrumManagerFX.classpath">
        <pathelement location="bin"/>
        <path refid="JavaFX SDK.libraryclasspath"/>
        <pathelement location="lib/commons-collections-3.2.1.jar"/>
        <pathelement location="lib/commons-configuration-1.8.jar"/>
        <pathelement location="lib/commons-lang-2.6.jar"/>
        <pathelement location="lib/commons-logging-1.1.1.jar"/>
        <pathelement location="lib/mmj.jar"/>
    </path>

    <!-- ivy start -->
    <!-- ivy to get dependencies and copy to project lib folder automatically -->
    <target name="resolve" description="retrieve dependencies with ivy">
        <ivy:retrieve />
    </target>

    <!-- install ivy -->
    <target name="ivy" description="Install ivy">
        <mkdir dir="${user.home}/.ant/lib" />
        <get dest="${user.home}/.ant/lib/ivy.jar"
             src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.4.0-rc1/ivy-2.4.0-rc1.jar" />
    </target>
    <!-- ivy end -->

    <target name="init">
        <mkdir dir="${build.dir}" />
    </target>

    <path id="classpath">
        <fileset dir="${basedir}/">
            <include name="${lib.dir}/*.jar" />
        </fileset>
    </path>

    <!-- Need classpath to run this -->
    <target name="compile" depends="init" description="compile the source ">
        <javac includeantruntime="false" srcdir="${src.dir}"
               destdir="${build.dir}" classpathref="classpath" />
        <copy todir="${build.dir}/info/megadrum/managerfx">
            <fileset file="${src.dir}/info/megadrum/managerfx/application.css"/>
        </copy>
        <copy todir="${build.dir}">
            <fileset file="${src.dir}/icon_256x256.png"/>
        </copy>
    </target>

    <!-- Group all dependencies into a big dependency-all.jar -->
    <target name="copy-dependencies">

        <mkdir dir="${dist.lib.dir}" />

        <jar jarfile="${dist.lib.dir}/dependencies-all.jar">
            <zipgroupfileset dir="${lib.dir}">
                <include name="**/*.jar" />
            </zipgroupfileset>
        </jar>

    </target>

    <!-- jar it, extract above dependency-all.jar and zip it with project files -->
    <target name="jar" depends="compile, copy-dependencies"
            description="package, output to JAR">

        <mkdir dir="${dist.dir}" />
        <mkdir dir="${dist.lib.dir}" />

        <jar jarfile="${dist.dir}/${projectName}.jar" basedir="${build.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}" />
            </manifest>
            <zipfileset src="${dist.lib.dir}/dependencies-all.jar"
                        excludes="META-INF/*.SF" />
        </jar>

    </target>

    <target name="clean" description="clean up">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
    </target>

    <!-- Default, run this -->
    <target name="main" depends="clean, compile, jar" />

</project>